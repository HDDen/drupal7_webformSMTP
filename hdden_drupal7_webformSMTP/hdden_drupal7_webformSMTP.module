<?php

define( 'HDDEN_WFSMTP__PLUGIN_DIR', rtrim( dirname( __FILE__ ), '\\/' ) );
define( 'HDDEN_WFSMTP__PLUGIN_URL',
	drupal_get_path('module', 'hdden_drupal7_webformSMTP')
);

include_once HDDEN_WFSMTP__PLUGIN_DIR . '/inc/SendMailSmtpClass.php';
include_once HDDEN_WFSMTP__PLUGIN_DIR . '/inc/HDDenLogger.inc';
include_once HDDEN_WFSMTP__PLUGIN_DIR . '/config.php';

/**
 * Implements hook_webform_submission_insert().
 */
function hdden_drupal7_webformSMTP_webform_submission_insert($node, $submission){

    // подключаем лог
    $logger = false;
    if (class_exists('hdden_drupal7_webformSMTP__HDDenLogger')) $logger = new hdden_drupal7_webformSMTP__HDDenLogger($GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__LOG']);

    // Получаем значения
    $values = false;
    if ($submission){
        $values = $submission->data;
    }

    // пробежимся по массиву значений, преобразуем из массива в строки
    foreach ($values as &$temporary_value){
        $temporary_value = is_array($temporary_value) ? $temporary_value[0] : $temporary_value;
    }

    // Фиксируем id
    $form_id = strval($submission->nid);

    $logger ? $logger->write('***********************************************************'
    ) : '';

    $logger ? $logger->write(
    __METHOD__.': '.'Получено обращение, $form_id = '.$form_id
    ) : '';

    $result = false;
    if (class_exists('hdden_SendMailSmtpClass')){
        try {
            $mailSMTP = new hdden_SendMailSmtpClass(
                $GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__LOGIN'], 
                $GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__PWD'], 
                $GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__HOST'], 
                $GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__PORT'], 
                $GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__CHARSET']
            );

            $from = array(
                $GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__FROMNAME'], // Имя отправителя
                $GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__FROMMAIL'] // почта отправителя
            );

            $mail_body = '';
            $mail_body .= 'Отправка с сайта: '.$_SERVER['HTTP_HOST'].'<br>'.'<br>';
            $mail_body .= 'Полученные значения: '.'<br>';

            foreach ($values as $key => $value) {
                if ($mail_body) $mail_body .= '<br>';
                $mail_body .= $key.': "'.$value.'"; ';
            }

            $mail_body .= '<br>'.'<br>'.'Дополнительная информация о пользователе:'.'<br>';
            $mail_body .= 'IP-адрес: '.(!empty($_SERVER['HTTP_CLIENT_IP']) ? $_SERVER['HTTP_CLIENT_IP'] : (!empty($_SERVER['HTTP_X_FORWARDED_FOR']) ? $_SERVER['HTTP_X_FORWARDED_FOR'] : (!empty($_SERVER['REMOTE_ADDR']) ? $_SERVER['REMOTE_ADDR'] : ''))).'<br>';
            $mail_body .= 'User Agent: '.(!empty($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : '').'<br>';
            $mail_body .= 'Дата и время: '.date('Y-m-d H:i:s').'<br>';
            $mail_body .= 'Реферер: '.(!empty($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : '');

            $logger ? $logger->write(__METHOD__.': '.
            'Начинаем отправку: '.PHP_EOL.var_export($mail_body, true)
            ) : '';

            // нарезаем получателей (не хочет отправляться группе)
            $to = !empty($GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__TO']) ? explode(',', $GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__TO']) : '';
            foreach ($to as $recipient_index => $recipient) {
                $recipient = trim($recipient);
                if (!$recipient){
                    unset($to[$recipient_index]);
                } else {
                    $to[$recipient_index] = $recipient;
                }
            }

            // отправка
            if (!empty($to)){

                foreach ($to as $recipient_index => $recipient) {
                    try {
                        $result = $mailSMTP->send(
                            $recipient, 
                            $GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__SUBJECT'],  
                            $mail_body,
                            $from
                        );

                        $logger ? $logger->write(__METHOD__.': '.
                        $recipient.': результат '.var_export($result, true)
                        ) : '';
                    } catch (\Throwable $th) {
                        $logger ? $logger->write(__METHOD__.': '.
                        'Для реципиента '.$recipient.' не удалось отправить письмо: '.PHP_EOL.var_export($mail_body, true)
                        ) : '';
                    }

                    if (!empty($GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__DELAY']) && intval($GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__DELAY']) < 31){
                        sleep(intval($GLOBALS['hdden_drupal7_webformSMTP_opts']['HDDEN_WFSMTP__DELAY']));
                    }
                }
            } else {
                $logger ? $logger->write(__METHOD__.': '.
                'Отправлять некому, массив $to пуст'
                ) : '';
            }
            
        } catch (\Throwable $th) {
            $result = false;

            $logger ? $logger->write(__METHOD__.': '.
            'Произошла ошибка отправки, значения: '.PHP_EOL.var_export($mail_body, true)
            ) : '';
        }
    }

    // Вернём ошибку пользователю, если что-то пошло не так
    if ( ($result === false) || (stripos($result, 'error') !== false) ){
        $abort = true;
        if (empty($abort_msg)) $abort_msg = 'Не удалось отправить заявку, свяжитесь по телефону или WhatsApp!';

        $logger ? $logger->write(__METHOD__.': '.
        $abort_msg.PHP_EOL.'Дамп $result:'.PHP_EOL.var_export($result, true)
        ) : '';
        
        echo $abort_msg;
        return false;
    } else {
        $logger ? $logger->write(__METHOD__.': '.
        'Результат отправки, дамп $result: '.PHP_EOL.var_export($result, true)
        ) : '';
        return $result;
    }
}